---
export interface Props {
  title: string;
  date: string;
  description: string;
  link?: string;
  technologies?: { icon: string; name: string }[];
}
const { title, date, description, technologies } = Astro.props

---
<div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
<time class="mb-1 text-sm font-normal leading-none text-blue-300/80 dark:text-gray-500">{date}</time>
<h3 class="text-lg font-semibold text-yellow-200 opacity-80 mt-2">{title}</h3>
<p class="mb-4 text-base font-normal text-gray-300 dark:text-gray-400 text-pretty">{description}</p>
{/* 
{link && (
  <link>
    <a href={link} class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-100 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700">Learn more...{" "} <svg class="w-3 h-3 ms-2 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
    </svg></a>
  </link>
)}
*/}
{technologies && technologies.length > 0 && (
  <div class="flex flex-wrap mt-5">
    {technologies.map((tech) => (
      <div class="flex items-center mr-2 mb-2 p-2 border border-black-100 rounded-lg bg-gray-300 dark:bg-gray-800 dark:border-gray-600 hover:bg-yellow-300 dark:hover:bg-yellow-600 transition duration-300 ease-in-out">
        <img src={tech.icon} alt={tech.name} class="w-5 h-5 mr-1" />
        <span class="text-sm font-medium text-gray-900 dark:text-gray-300">{tech.name}</span>
      </div>
    ))}
  </div>
)}
  </div>
  </div>